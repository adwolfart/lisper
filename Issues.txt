* Design [0/4]

- [ ] Type of the expression before and after eval must not be same. I cannot
  prevent double evaluations at compile time. This is trickier than it sounds.

  tldr; Prevent `eval $ eval lv` at compile time.

- [ ] Primitives must be defined and added to a default environment rather than
  `applyPrimitive` magic. Makes evaluation simpler and will give complete access
  to them. Cannot use `+` as a higher order function now because it cannot be
  resolved right.

- [ ] Add a prelude.lisp file, which is evaluated on startup. This can act as a
  stdlib and can go a long way.

- [ ] Remove all `error`. This makes evaluating a series of expressions really
  complicated. Add proper error handling. Make `progn` stop at the first error
  and report it.

* Bugs [0/3]

- [ ]

* Enhancements [0/2]

- [ ] Add multi line expressions to shell
- [ ]
